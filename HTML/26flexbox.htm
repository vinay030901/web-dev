<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>flexbox</title>
    <style>
        .container{
            height: 800px;
            width: 100%;
            border: 3px solid black;
            display: flex;/*display flex is used to initialise container as flex*/
            /*flex properties for container*/
            flex-direction: column;
            flex-direction: row-reverse;
            flex-direction: row ;
            /*flex-direction changes the direction of how items are filled in container, by default flex-direction is row*/
            /*flex-wrap helps us in wrapping up of items if we change size of our container, by default it is nowrap*/
            flex-wrap: wrap;
            /*using flex-flow we can specify both flex direction and wrapping*/
            flex-flow: row wrap;
            /*justify content is used to align our items*/
            justify-content: center;
            justify-content: flex-start;
            justify-content: space-evenly;
            /*justify content could be center, flex-start, flex-end, space-between(space between item is same),space around(space around items is same),space-evenly(spaces including starting and end is same) etc*/
            
            /*align items is used to align the items*/
            align-items:flex-end;
            /*flex end pushes elements at the end*/
            align-items: center;
            /*center makes the items vertically center in container*/
        }
        .item{
            width: 150px;
            height: 200px;
            color: darkred;
            font-weight: bolder;
            border: 2px solid rgb(10, 17, 10);
            background-color:rgb(207, 164, 22);
            margin: 8px;
            padding: 10px;
        }
        /*flexbox properties in case of item*/
        #item1{
            /*increasing the value of order will shift position of element to last, elements with bigger order will be at the end*/
            order: 4;
            flex-grow: 3;
            flex-shrink: 3;
            /*flex-grow will change the size of box and grow it multiple times, negative number are invalid*/
            
        }
        #item2{
            flex-shrink: 3;
            /*flex-shrink decreases the size of decreases the size of item*/
        }
        #item3{
            /*flex-grow: 2;*/
            /*we can fix the size of item using flex-basis*/
            flex-basis: 100px;
            /*so the size of this item decreased as I specified a smaller width*/
            /*when flex-direction is set to row, then flex basis will control width or otherwise column*/
        }
        #item4{
            /*flex: flex-grow/flex-shrink/flex-basis
            flex: 2 2 400px;*/
            /*we can align the items using align-self- flexend,flex-start,center*/
            align-self: flex-end;
            align-self: center;
        }
    </style>
</head>
<body>
    <h1>flexbox</h1>
    <div class="container">
    <div class="item" id="item1">first box</div>
    <div class="item" id="item2">second box</div>
    <div class="item" id="item3">third box</div>
    <div class="item" id="item4">fourth box</div>
    <div class="item" id="item5">fifth box</div>
    <div class="item" id="item6">sixth box</div> 
    </div>
</body>
</html>